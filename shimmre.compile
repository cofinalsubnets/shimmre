_ -> null
init ->
  this.peg = {
    term: function(t) {
      return function(str) {
        return str.slice(0, +(t.length - 1) + 1 || 9e9) === t && match([t], str.slice(t.length));
      };
    },
    cat: function(p1, p2) {
      return function(str) {
        var t1, t2;
        return (t1 = p1(str)) && (t2 = p2(t1.rem)) && match(t1.val.concat(t2.val), t2.rem);
      };
    },
    alt: function(p1, p2) {
      return function(str) {
        return p1(str) || p2(str);
      };
    },
    opt: function(p) {
      return function(str) {
        return p(str) || match([], str);
      };
    },
    rep: function(p) {
      return function(s) {
        var r;
        return (r = p(s)) && map(peg.rep(p), function(a) {
          a.unshift(r.val);
          return a;
        })(r.rem) || match([], s);
      };
    },
    andp: function(p1) {
      return function(str) {
        return p1(str) && match([], str);
      };
    },
    notp: function(p1) {
      return function(str) {
        return !p1(str) && match([], str);
      };
    }
  };

term -> return this.peg.term(data[1].join(''));

paren -> return data[1]

altExpr ->
  return data.filter(function (d) { return typeof(d) == 'function';}).
    reduce(this.peg.alt);

